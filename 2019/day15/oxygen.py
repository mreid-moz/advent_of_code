from computer import IntcodeComputer
import logging
import itertools
logging.basicConfig(level=logging.INFO)

UNKNOWN = '░' # unknown
WALL = '█' # wall
PASSABLE = ' ' # passable
SENSOR = 'O' # sensor

NORTH = 1
SOUTH = 2
WEST = 3
EAST = 4

class Droid:
  def __init__(self, control_program):
    self.original_program = control_program.program.copy()
    self.reset()

  def run(self):
    self.control_program.run_program()
    self.process_output()
    while True:
      self.update_screen()
      self.get_input()
      while self.control_program.step():
        pass
      self.process_output()

  def reset(self):
    self.control_program = IntcodeComputer(self.original_program.copy())
    self.position = (40,30)
    self.screen = {}
    self.control_program.run_program()
    self.moves = []
    self.process_output()

  def update_screen(self):
    for y in range(51):
      for x in range(81):
        if (x, y) == self.position:
          print("§", end="")
        else:
          print("{}".format(self.screen.get((x, y), UNKNOWN)), end="")
      print("")
    print("".join(['-']*80))

  def get_input(self):
    answer = input("north w, west a, south s, east d. Move? ")
    move = None
    if answer == 'w':
      move = NORTH
    elif answer == 's':
      move = SOUTH
    elif answer == 'a':
      move = WEST
    elif answer == 'd':
      move = EAST
    elif answer == 'R':
      self.reset()
    elif answer == 'P':
      logging.info("Current moves: {}".format(self.moves))
    else:
      logging.info("Ignoring unknown direction '{}'.".format(answer))
    if move is not None:
      self.last_direction = move
      self.control_program.input.append(move)

  def process_output(self):
    while len(self.control_program.output) > 0:
      status = self.control_program.output.pop(0)

      # repair droid hit a wall
      target_x, target_y = self.position
      if self.last_direction == NORTH:
        target_y -= 1
      elif self.last_direction == SOUTH:
        target_y += 1
      elif self.last_direction == WEST:
        target_x -= 1
      elif self.last_direction == EAST:
        target_x += 1

      if status == 0:
        # repair droid hit a wall
        self.screen[(target_x, target_y)] = WALL
      elif status == 1:
        # moved in requested direction
        self.screen[(target_x, target_y)] = PASSABLE
        self.moves.append(self.last_direction)
        self.position = (target_x, target_y)
      elif status == 2:
        # moved in requested direction and found the thingy
        self.position = (target_x, target_y)
        self.moves.append(self.last_direction)
        self.screen[(target_x, target_y)] = SENSOR


with open('input') as fin:
  program = fin.read().strip()
instructions = [int(s) for s in program.split(",")]

computron = IntcodeComputer(instructions)
droid = Droid(computron)
droid.run()

moves = [3, 3, 3, 3, 2, 2, 4, 4, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 2, 2, 2, 2, 4, 4, 4, 4, 1, 1, 4, 4, 4, 4, 4, 4, 2, 2, 3, 3, 2, 2, 3, 3, 2, 2, 2, 2, 4, 4, 1, 1, 4, 4, 2, 2, 4, 4, 2, 2, 4, 4, 1, 1, 1, 1, 1, 1, 3, 3, 1, 1, 1, 1, 1, 1, 3, 3, 1, 1, 3, 3, 1, 1, 1, 1, 4, 4, 1, 1, 4, 4, 4, 4, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 1, 1, 1, 1, 3, 3, 3, 3, 1, 1, 3, 3, 2, 2, 3, 3, 2, 2, 2, 2, 4, 4, 2, 2, 3, 3, 3, 3, 3, 3, 1, 1, 3, 3, 1, 1, 4, 4, 1, 1, 3, 3, 3, 3, 1, 1, 4, 4, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 4, 4, 4, 4, 4, 4, 1, 1, 4, 4, 1, 1, 4, 4, 4, 4, 4, 4, 2, 2, 3, 3, 2, 2, 3, 3, 2, 2, 2, 2, 4, 4, 1, 1, 4, 4, 4, 4, 1, 1, 4, 4, 4, 4, 2, 2, 4, 4, 1, 1, 1, 1, 4, 4, 1, 1, 4, 4, 2, 2, 4, 4, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 1, 1, 4, 4, 1, 1, 1, 1, 3, 3, 1, 1, 4, 4, 1, 1, 3, 3, 3, 3]
print("It took {} moves to get to the sensor".format(len(moves)))
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░       █░█         █O    █░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█░ ░░░░░ ░░░░░░░░░ ░ ░████ █░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█   █░█   █░░░░░░   █   █   █░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░█░░░░░ ░█░░░ ░█░█░░░██ ░█░█░ █§██░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░█       █     █░░     █ █     █   █░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░ ░░░░░░░██ ██░░░ ░░░ █ █ ░░░█░░░ ░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░█         ░ █     █░░   █ ░░░░░░░ ░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░█░ ░ █ █░░█░█░███░ ░░░░░█░ ░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█   █   █░█   ░░░░░ ░░░░░   █░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ ░░░██ ██░ ░ ░░░█░ ░░░░░ ░░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█     █ █   █     ░       █░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█░█░ █ █ ░█░░░░░ ░█░░░░░█░█░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█   █ █ ░░░░░░░ █         ░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ ░██ █ ░░░░░░░ ░ ░░░█░░░ ░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█   █ █   █░░░█   ░░█     █░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ ░█░█░ ░░░░░█░█░█░ ░░░░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█       ░░░░░░░░█   █░░░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█░░░░░█░░░░░░░░░ ░░░░░░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ ░░░░░░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█████░░░░░░░░░░░ ░█░░░░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█     █░░░░░░░░░█   ░░░░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█ ████░░░█░░░░░░░░░ ░█░░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█   █     █░░░░░░░█   ░░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██ █ ░░░ ░░░█░░░░░█░ ░░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█ █ ░░░ ░░░       █ ░░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██ █ ░░░ ░░░ ░░░░░ ░ ░░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█   █ ░░░     █░█   █ ░░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█ ██░ ░░░█░░░█░░░ ░██ ██░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█ █░░ ░░░░░░░░█   █     █░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█ ███ ░░░░░░░░░ ░█░██ █ ░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█     █░░░░░░░░ ░   █ █ ░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█████░░░░░░░░░ ░ ░ ░█░ ░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█   █   █ ░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░███░█░ ░ ░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░   █░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
#░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░#